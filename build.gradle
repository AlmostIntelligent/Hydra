apply plugin: 'java'
apply plugin: 'eclipse'
apply from: "gradle/dist.gradle"
apply from: "gradle/coverage.gradle"
apply from: "gradle/codequality.gradle"
apply from: "gradle/idea.gradle"

project.sourceCompatibility = 1.7
project.targetCompatibility = 1.7

defaultTasks 'tasks'

ext {
    jvm = org.gradle.internal.jvm.Jvm.current()
    javaVersion = JavaVersion.current()
    javaProjects = subprojects.findAll { !(it.name in ["doc"])}
}

configure(allprojects) {

	group = 'org.gethydrated'

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked"
    ]

	repositories { mavenCentral() }

	dependencies {
		compile 	"org.slf4j:slf4j-api:1.6.6"
		testCompile "junit:junit:4.10"
		testCompile "ch.qos.logback:logback-classic:1.0.7"
		testCompile "com.googlecode.jmockit:jmockit:0.999.18"
	}

	clean.dependsOn subprojects.collect { "$it.path:clean" }
	build.dependsOn subprojects.collect { "$it.path:build" }
}

configure(subprojects) { subproject ->	
	jar {
		manifest.attributes['Implementation-Title'] = subproject.name
		manifest.attributes['Implementation-Version'] = subproject.version
	}

	test {
		ignoreFailures=true
		testLogging {
			exceptionFormat "full"
			events "started", "passed", "skipped", "failed", "standardOut", "standardError"
			minGranularity 0
		}
	}
	archivesBaseName = 'hydra-' + subproject.name
}

project("api") { description = 'Hydra API' }

project("launcher") {
	description = 'Hydra Launcher'
	jar {
		manifest.attributes['Main-Class'] = mainClass
	}

	dependencies {
		compile project(':core')
		compile "ch.qos.logback:logback-classic:1.0.7"
	}
}

project("actors") {
	description = 'Hydra Actor implementation'
	
	dependencies {
		compile project(':api')
        compile project(':config')
        compile "com.google.guava:guava:13.0.1"
	}
}

project("core") {
	description = 'Hydra Core'

	dependencies { 
		compile project(':api') 
		compile project(':actors')
        compile project(':config')
        compile "org.eclipse.jetty:jetty-server:8.1.8.v20121106"   //Workaround for jetty dependency copying.
	}
}

project("config") {
    description = 'Hydra configurations'

    dependencies {
        compile project(':api')
    }
}

project("cli-service") {
	description = 'Hydra CLI'

	dependencies { 
	   compile project(':api')
	   testCompile project(':core') 
	}
}

project("kartograph-service") {
	description = 'Kartograph Service'
	
	dependencies {
		compile project(':api')
		testCompile project(':core') 
	}
}

project("jetty-service") {
    description = 'Hydra Jetty http server'

    dependencies {
        compile project(':api')
        compile "org.eclipse.jetty:jetty-server:8.1.8.v20121106"
    }
}

configure(rootProject) {
	configurations { jacocoant }

	description = 'Hydra'	

	task wrapper(type: Wrapper) {
		description = 'Generates gradlew[.bat] scripts'
		gradleVersion = '1.3'
	}
}
