apply from: "${rootProject.projectDir}/gradle/dist.gradle"

defaultTasks 'build'

configure(allprojects) {
	apply plugin: 'java'
	apply plugin: 'eclipse'


	group = 'org.gethydrated'

	sourceCompatibility=1.7
	targetCompatibility=1.7

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

	repositories { mavenCentral() }

	dependencies {
		compile 	"org.slf4j:slf4j-api:1.6.4"
		testCompile "junit:junit:4.10"
		testCompile "ch.qos.logback:logback-classic:1.0.1"
	}

	clean.dependsOn subprojects.collect { "$it.path:clean" }
	build.dependsOn subprojects.collect { "$it.path:build" }
}

configure(subprojects) { subproject ->
	configurations { jacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo
	}

	dependencies {
		jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.5.7.201204190339", classifier: "runtime"
	}

	jar {
		manifest.attributes['Implementation-Title'] = subproject.name
		manifest.attributes['Implementation-Version'] = subproject.version
	}
	

	test { jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=${rootProject.buildDir}/coverage-results/jacoco.exec,includes=org.gethydrated.hydra.*,excludes=org.gethydrated.hydra.test.*" }

	archivesBaseName = 'hydra-' + subproject.name
}

project("api") { description = 'Hydra API' }

project("launcher") {
	description = 'Hydra Launcher'
	jar {
		manifest.attributes['Main-Class'] = mainClass
	}

	dependencies {
		compile project(':core')
		compile "ch.qos.logback:logback-classic:1.0.1"
	}
}

project("core") {
	description = 'Hydra Core'

	dependencies { compile project(':api') }

}

project("cli-service") {
	description = 'Hydra CLI'

	dependencies { compile project(':api') }
}

configure(rootProject) {
	configurations { jacocoant }

	dependencies {
		jacocoant group: "org.jacoco", name: "org.jacoco.ant", version: "0.5.7.201204190339"
	}

	task generateCoverageReport << {
		ant {
			taskdef(name:'jacocoreport', classname: 'org.jacoco.ant.ReportTask') { classpath path: "${configurations.jacocoant.asPath}" }

			mkdir dir: "${rootProject.buildDir}/reports/coverage"
			mkdir dir: "${rootProject.buildDir}/reports/coverage-xml"

			jacocoreport {
				executiondata {
					ant.file file: "${rootProject.buildDir}/coverage-results/jacoco.exec"
				}

				structure(name: "Hydra Coverage Reports") {

					classfiles {
						files(subprojects.collect { project ->
							fileset dir: "${project.projectDir.path}/build/classes/main"
						}) }

					sourcefiles(encoding: 'UTF-8') {
						files(subprojects.collect { project ->
							fileset dir: "${project.projectDir.path}/src/main/java"
						}) }

				}

				xml  destfile: "${rootProject.buildDir}/reports/coverage-xml/jacoco.xml"
				html destdir: "${rootProject.buildDir}/reports/coverage"
			}
		}
	}
	description = 'Hydra'	

	task wrapper(type: Wrapper) {
		description = 'Generates gradlew[.bat] scripts'
		gradleVersion = '1.0-rc-1'
	}
}
